@model OPMS.ViewModels.AboutSectionViewModel

@{
    ViewBag.Title = "About";
}

<div class="card card-cascade narrower blue lighten-5">

    <!-- Card image -->
    <div class="view view-cascade gradient-card-header  blue lighten-1 text-white">

        <!-- Title -->
        <h4 class="text-white">Create New about Section</h4>
        <!-- Subtitle -->
    </div>

    <!-- Card content -->
    <div class="card-body card-body-cascade text-center">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label offset-1" })
                <div class="offset-3">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.MainTitle, htmlAttributes: new { @class = "control-label  offset-1" })
                <div class="offset-3">
                    @Html.EditorFor(model => model.MainTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MainTitle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.SubTitle, htmlAttributes: new { @class = "control-label  offset-1" })
                <div class="offset-3">
                    @Html.EditorFor(model => model.SubTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SubTitle, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.ButtonUrl, htmlAttributes: new { @class = "control-label  offset-1" })
                <div class="offset-3">
                    @Html.EditorFor(model => model.ButtonUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ButtonUrl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.UrlImages, htmlAttributes: new { @class = "control-label  offset-1" })
                <div class="offset-3">
                    @Html.EditorFor(model => model.UrlImages, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UrlImages, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label  offset-1" })
                <div class="offset-3">
                    @Html.TextAreaFor(model => model.Content)
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group md-form offset-3 col-md-9">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" value="Create" class="btn btn-primary"><i class="fas fa-save pr-2"></i> Save</button>  |
                    <a class="btn btn-primary" href="/OPMSAdmin/AboutSections/Index"><i class="fas fa-undo-alt pr-2"></i> Back to Menu</a>
                </div>
            </div>
        </div>
        }


    </div>

</div>


@section AdminCustomCSS{

    <link href="~/Content/AdminCustomCSS.css" rel="stylesheet" />

}
@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script>
        CKEDITOR.replace("Content")
    </script>
    <script>
        $(document).ready(function () {
            $(".button-collapse").sideNav({
                breakpoint: 1200
            });

            var sideNavScrollbar = document.querySelector('.custom-scrollbar');
            var ps = new PerfectScrollbar(sideNavScrollbar);
            Ps.initialize(el);
        });
    </script>
}


