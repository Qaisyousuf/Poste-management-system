@model OPMS.ViewModels.SiteSettingsViewModel

@{
    ViewBag.Title = "SiteSettings";
}
<div class="card card-cascade narrower blue lighten-5">

    <!-- Card image -->
    <div class="view view-cascade gradient-card-header  blue lighten-1 text-white">

        <!-- Title -->
        <h4 class="text-white">Update The Page</h4>
        <!-- Subtitle -->
    </div>

    <!-- Card content -->
    <div class="card-body card-body-cascade text-center">

        <hr />

        <h4 class="light-blue-text  ">Are you sure you want to update the <button class="btn btn-info btn-sm  btn-rounded"><i class="fas fa-edit pr-2"></i> @Model.SiteName </button> setting ?</h4>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.SiteName, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.SiteName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SiteName, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.SiteFooter, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.SiteFooter, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SiteFooter, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.FavIconURL, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.FavIconURL, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FavIconURL, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.SiteOwner, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.SiteOwner, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SiteOwner, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.CustomCSS, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.CustomCSS, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CustomCSS, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.GoogleSiteVerification, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.GoogleSiteVerification, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.GoogleSiteVerification, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.GoogleAds, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.GoogleAds, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.GoogleAds, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.CustomJS, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.CustomJS, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CustomJS, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.HomeFooter, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.HomeFooter, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HomeFooter, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.HomeUrl, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.HomeUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HomeUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.AboutFooter, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.AboutFooter, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AboutFooter, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.AboutUrl, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.AboutUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AboutUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.ContactFooter, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.ContactFooter, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactFooter, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.ContactUrl, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.ContactUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.RolesFooter, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.RolesFooter, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RolesFooter, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.RolesUrl, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.RolesUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RolesUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.ContactNumberFooter, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.ContactNumberFooter, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactNumberFooter, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.EmailFooter, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.EmailFooter, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailFooter, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.AddresFooter, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.AddresFooter, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddresFooter, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.CopyrightFooter, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.CopyrightFooter, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CopyrightFooter, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.LoginFooter, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.LoginFooter, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LoginFooter, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.LoginUrl, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.LoginUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LoginUrl, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.ContentFooter, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.TextAreaFor(model => model.ContentFooter)
                        @Html.ValidationMessageFor(model => model.ContentFooter, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group  ">
                    <div class="checkbox">
                        <label>@Html.CheckBoxFor(x => x.IsRegister, new { style = "opacity: 1" })<br />@Html.DisplayNameFor(x => x.IsRegister)</label>
                    </div>
                </div>
                <div class="form-group ">
                    <div class="checkbox">
                        <label>@Html.CheckBoxFor(x => x.IsCustomCSSOn, new { style = "opacity: 1" })<br />@Html.DisplayNameFor(x => x.IsCustomCSSOn)</label>
                    </div>
                </div>
                <div class="form-group ">
                    <div class="checkbox">
                        <label>@Html.CheckBoxFor(x => x.IsCustomJsOn, new { style = "opacity: 1" })<br />@Html.DisplayNameFor(x => x.IsCustomJsOn)</label>
                    </div>
                </div>
                <div class="form-group md-form offset-3 col-md-9">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" value="Create" class="btn btn-primary"><i class="fas fa-save pr-2"></i> Save</button>  |
                        <a class="btn btn-primary" href="/OPMSAdmin/SiteSettings/Index"><i class="fas fa-undo-alt pr-2"></i> Back to menu</a>
                    </div>
                </div>
            </div>
        }


    </div>

</div>

@section AdminCustomCSS{

    <link href="~/Content/AdminCustomCSS.css" rel="stylesheet" />

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script>
        CKEDITOR.replace("ContentFooter")
    </script>
    <script>
        $(document).ready(function () {
            $(".button-collapse").sideNav({
                breakpoint: 1200
            });

            var sideNavScrollbar = document.querySelector('.custom-scrollbar');
            var ps = new PerfectScrollbar(sideNavScrollbar);
            Ps.initialize(el);
        });
    </script>
}


