@model OPMS.ViewModels.PageViewModel

@{
    ViewBag.Title = "Create";
}

<div class="card card-cascade narrower blue lighten-5">

    <!-- Card image -->
    <div class="view view-cascade gradient-card-header  blue lighten-1 text-white">

        <!-- Title -->
        <h4 class="text-white">Create New Page</h4>
        <!-- Subtitle -->
    </div>

    <!-- Card content -->
    <div class="card-body card-body-cascade text-center">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.TextAreaFor(model => model.Content)
                        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.MetaKeywordsPage, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.MetaKeywordsPage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MetaKeywordsPage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.MetaDescriptionPage, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.EditorFor(model => model.MetaDescriptionPage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MetaDescriptionPage, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.SidebarId, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.DropDownListFor(model => model.SidebarId, new SelectList(ViewBag.SidebarDropDownList, "Id", "name"), "-------Select the Sidebar Name------", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SidebarId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.BannerId, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.DropDownListFor(model => model.BannerId, new SelectList(ViewBag.HomeBanner, "Id", "Title"), "-------Select the banner name------", new { @class = "form-control" })

                        @Html.ValidationMessageFor(model => model.BannerId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group md-form offset-1 col-md-9">
                    @Html.LabelFor(model => model.HomeContentId, htmlAttributes: new { @class = "control-label offset-1" })
                    <div class="offset-3">
                        @Html.DropDownListFor(model => model.HomeContentId, new SelectList(ViewBag.HomeContent, "Id", "Title"), "-------Select the banner name------", new { @class = "form-control" })

                        @Html.ValidationMessageFor(model => model.HomeContentId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group  ">
                    <div class="checkbox">
                        <label>@Html.CheckBoxFor(x => x.IsVisibleToSearchEnginePage, new { style = "opacity: 1" })<br />@Html.DisplayNameFor(x => x.IsPageMetaDataOn)</label>
                    </div>
                </div>
                <div class="form-group ">
                    <div class="checkbox">
                        <label>@Html.CheckBoxFor(x => x.IsPageMetaDataOn, new { style = "opacity: 1" })<br />@Html.DisplayNameFor(x => x.IsVisibleToSearchEnginePage)</label>
                    </div>
                </div>


                <div class="form-group md-form offset-3 col-md-8">
                    <div class="col-md-offset-2 col-md-10">

                        <button type="submit" value="Create" class="btn btn-primary"><i class="fas fa-save pr-2"></i> Save</button>  |
                        <a class="btn btn-primary" href="/OPMSAdmin/Pages/Index"><i class="fas fa-undo-alt pr-2"></i> Back to Menu</a>
                    </div>
                </div>
            </div>


        }


    </div>

</div>


@section AdminCustomCSS{
    
    <link href="~/Content/AdminCustomCSS.css" rel="stylesheet" />

}
@section Scripts
{
   
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script>
        CKEDITOR.replace("Content")
    </script>
    <script>
        $(document).ready(function () {
            $(".button-collapse").sideNav({
                breakpoint: 1200
            });

            var sideNavScrollbar = document.querySelector('.custom-scrollbar');
            var ps = new PerfectScrollbar(sideNavScrollbar);
            Ps.initialize(el);
        });
    </script>
}