@model OPMS.ViewModels.HelpSupportVM

@{
    ViewBag.Title = "Support";

}

<div class="card card-cascade narrower blue lighten-5">

    <!-- Card image -->
    <div class="view view-cascade gradient-card-header  blue lighten-1 text-white">

        <!-- Title -->
        <h4 class="text-white">Update The help and support</h4>
        <!-- Subtitle -->
    </div>

    <!-- Card content -->
    <div class="card-body card-body-cascade text-center">

        <hr />

        <h4 class="light-blue-text  ">Are you sure you want to update the <button class="btn btn-info btn-sm  btn-rounded"><i class="fas fa-edit pr-2"></i> @Model.Title</button> ?</h4>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label offset-1" })
                <div class="offset-3 ">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label offset-1" })
                <div class="offset-3 ">
                    @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.DeveloperName, htmlAttributes: new { @class = "control-label offset-1" })
                <div class="offset-3 ">
                    @Html.EditorFor(model => model.DeveloperName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeveloperName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.SoftwareDownload, htmlAttributes: new { @class = "control-label offset-1" })
                <div class="offset-3 ">
                    @Html.EditorFor(model => model.SoftwareDownload, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SoftwareDownload, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.ProiflePic, htmlAttributes: new { @class = "control-label offset-1" })
                <div class="offset-3 ">
                    @Html.EditorFor(model => model.ProiflePic, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProiflePic, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.DesignedBy, htmlAttributes: new { @class = "control-label offset-1" })
                <div class="offset-3 ">
                    @Html.EditorFor(model => model.DesignedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DesignedBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label offset-1" })
                <div class="offset-3 ">
                    @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label offset-1" })
                <div class="offset-3 ">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.Skype, htmlAttributes: new { @class = "control-label offset-1" })
                <div class="offset-3 ">
                    @Html.EditorFor(model => model.Skype, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Skype, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label offset-1" })
                <div class="offset-3 ">
                    @Html.TextAreaFor(model => model.Content)
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group md-form offset-3 col-md-9">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" value="Create" class="btn btn-primary"><i class="fas fa-edit pr-2"></i> Update</button>  |
                    <a class="btn btn-primary" href="/OPMSAdmin/Helpsupport/Index"><i class="fas fa-undo-alt pr-2"></i> Back to Menu</a>
                </div>
            </div>
        </div>
        }
    </div>

</div>

@section AdminCustomCSS{

    <link href="~/Content/AdminCustomCSS.css" rel="stylesheet" />

}
@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script>
        CKEDITOR.replace("Content")
        CKEDITOR.replace("SubContent")
    </script>
    <script>
        $(document).ready(function () {
            $(".button-collapse").sideNav({
                breakpoint: 1200
            });

            var sideNavScrollbar = document.querySelector('.custom-scrollbar');
            var ps = new PerfectScrollbar(sideNavScrollbar);
            Ps.initialize(el);
        });
    </script>
}
