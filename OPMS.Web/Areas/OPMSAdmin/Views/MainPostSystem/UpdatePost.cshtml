@model OPMS.ViewModels.MainPostSystemVM

@{
    ViewBag.Title = "UpdatePost";
}
<div class="card card-cascade narrower blue lighten-5">

    <!-- Card image -->
    <div class="view view-cascade gradient-card-header  blue lighten-1 text-white">
        <h4>Update the post</h4>
        <!-- Title -->
        <!-- Subtitle -->
    </div>
   
    <!-- Card content -->
    <div class="card-body card-body-cascade text-center">
        <h4 class="light-blue-text  ">Are you sure you want to update the post for<button disabled class="btn btn-info btn-sm  btn-rounded waves-effect">@Model.UserName</button> ?</h4>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label offset-1" })
                <div class="offset-3">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label offset-1" })
                <div class="offset-3">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.PostExpirationDate, htmlAttributes: new { @class = "control-label offset-1" })
                <div class="offset-3">
                    @Html.EditorFor(model => model.PostExpirationDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.PostExpirationDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.PostExpirationTime, htmlAttributes: new { @class = "control-label offset-1" })
                <div class="offset-3">
                    @Html.EditorFor(model => model.PostExpirationTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostExpirationTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.SendedBy, htmlAttributes: new { @class = "control-label offset-1" })
                <div class="offset-3">
                    @Html.EditorFor(model => model.SendedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SendedBy, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.PostSystemId, htmlAttributes: new { @class = "control-label offset-1" })
                <div class="offset-3">
                    @Html.DropDownListFor(model => model.PostSystemId, new SelectList(ViewBag.postSystem, "Id", "Title"), "select the post type", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PostSystemId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group md-form offset-1 col-md-9">
                @Html.HiddenFor(model => model.UserId, htmlAttributes: new { @class = "control-label offset-1" })
                <div class="offset-3">
                    @Html.HiddenFor(model => model.UserId, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group md-form offset-1 col-md-9">
                @Html.LabelFor(model => model.SocialId, htmlAttributes: new { @class = "control-label offset-1" })
                <div class="offset-3">
                    @Html.DropDownListFor(model => model.SocialId, new SelectList(ViewBag.SocialWorker, "Id", "FullName"), "Social Worker", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SocialId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6 offset-1 ">
                <div class="checkbox">
                    <label>@Html.CheckBoxFor(x => x.HasPost, new { style = "opacity: 1" })<br />@Html.DisplayNameFor(x => x.HasPost)</label>
                </div>
            </div>
            <div class="form-group md-form offset-3 col-md-9">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" value="save" class="btn btn-primary"><i class="far fa-edit"></i> Update Post</button> |
                    <a class="btn btn-primary" href="/OPMSAdmin/MainPostSystem/PostData"><i class="fas fa-undo-alt pr-2"></i>Back to Menu</a>
                </div>
            </div>
        </div>
        }

    </div>

</div>


@section AdminCustomCSS{

    <link href="~/Content/AdminCustomCSS.css" rel="stylesheet" />

}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script>
        CKEDITOR.replace("Content")
        CKEDITOR.replace("SubContent")

    </script>
    <script>
        $(document).ready(function () {
            $(".button-collapse").sideNav({
                breakpoint: 1200
            });
            $('#input_starttime').pickatime();
            $('.datepicker').pickadate();

            var sideNavScrollbar = document.querySelector('.custom-scrollbar');
            var ps = new PerfectScrollbar(sideNavScrollbar);
            Ps.initialize(el);
        });
    </script>
}