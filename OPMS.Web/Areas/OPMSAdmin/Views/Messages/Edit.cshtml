@model OPMS.ViewModels.UserSMSViewModel

@{
    ViewBag.Title = "Edit";
}
<hr />
<h5>Vous avez choisi d'envoyer des SMS pour un résident <button disabled class="btn btn-primary">@Model.UserName</button> 
    veuillez choisir un type de SMS</h5>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control"} })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.AppointmentOrTaskDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AppointmentOrTaskDateTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AppointmentOrTaskDateTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MessageContainerId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.MessageContainerId, new SelectList(ViewBag.MessageContainer, "Id", "Title"), "Sélectionnez le type de SMS", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MessageContainerId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.BuildingId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.BuildingId, new SelectList(ViewBag.Address, "Id", "BuildingName"), "Sélectionnez le lieu de travail", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BuildingId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.SocialId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.SocialId, new SelectList(ViewBag.SocialWorker, "Id", "FullName"), "Sélectionnez le nom de l'expéditeur", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SocialId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Send" class="btn btn-primary" /> |
            <a class="btn btn-primary" href="/OPMSAdmin/Messages/Index">Retour à la liste principale</a>
        </div>
    </div>
</div>
}


